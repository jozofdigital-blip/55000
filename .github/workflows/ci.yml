name: CI

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  baseline:
    runs-on: ubuntu-latest
    steps:
      - name: Baseline check
        run: echo "CI is configured and running ✅"

  node:
    name: Node.js checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Detect Node project
        id: nodecheck
        run: |
          if [ -f package.json ]; then
            echo "has_node=true" >> "$GITHUB_OUTPUT"
          else
            echo "has_node=false" >> "$GITHUB_OUTPUT"
          fi

      - uses: actions/setup-node@v4
        if: steps.nodecheck.outputs.has_node == 'true'
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install
        if: steps.nodecheck.outputs.has_node == 'true'
        run: npm ci || npm i

      - name: Tests (non-blocking)
        if: steps.nodecheck.outputs.has_node == 'true'
        run: npm test --if-present || echo "Tests failed/skipped — continuing"
        continue-on-error: true

      - name: Lint (non-blocking)
        if: steps.nodecheck.outputs.has_node == 'true'
        run: npm run lint --if-present || echo "Lint failed/skipped — continuing"
        continue-on-error: true

      - name: Build (non-blocking)
        if: steps.nodecheck.outputs.has_node == 'true'
        run: npm run build --if-present || echo "Build failed/skipped — continuing"
        continue-on-error: true

  python:
    name: Python checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Detect Python project
        id: pycheck
        run: |
          if [ -f requirements.txt ] || [ -f pyproject.toml ]; then
            echo "has_python=true" >> "$GITHUB_OUTPUT"
          else
            echo "has_python=false" >> "$GITHUB_OUTPUT"
          fi

      - uses: actions/setup-python@v5
        if: steps.pycheck.outputs.has_python == 'true'
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install deps (requirements.txt)
        if: steps.pycheck.outputs.has_python == 'true' && hashFiles('requirements.txt') != ''
        run: pip install -r requirements.txt || echo "Install failed — continuing"
        continue-on-error: true

      - name: Install deps (pyproject)
        if: steps.pycheck.outputs.has_python == 'true' && hashFiles('pyproject.toml') != ''
        run: pip install -e . || pip install . || echo "Install failed — continuing"
        continue-on-error: true

      - name: Run pytest (non-blocking)
        if: steps.pycheck.outputs.has_python == 'true'
        run: |
          python - <<'PY'
          import importlib, sys
          sys.exit(0 if importlib.util.find_spec('pytest') else 0)
          PY
          python -m pytest -q || echo "pytest failed/skipped — continuing"
        continue-on-error: true

permissions:
  contents: read
